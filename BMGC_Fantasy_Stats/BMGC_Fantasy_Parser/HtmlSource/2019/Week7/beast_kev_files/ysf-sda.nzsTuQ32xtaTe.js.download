YUI.add('ysf-ads', function(Y) {
    if (!Y.Lang.isUndefined(YUI.Sports) && !Y.Lang.isUndefined(YUI.Sports.Ads)) {
        return;
    }

    Y.namespace('Sports.Ads');
    Y.Sports.Ads = {
        path: YUI.Fantasy.adPath,
        status: 'uninitiated',
        getAttempt: null,
        getAttemptCount: 0,
        load: function() {
            if (this.status != 'dead') {
                Y.Sports.Ads.createCallFrame();
                if (Y.Get && !this.getAttempt && this.status != 'ready') {
                    this.getAttempt = Y.Get.script(this.path, {onSuccess: this.loadSuccess, onFailure: this.loadFailure, onTimeout: this.loadTimeout, data: this, timeout: 10000, varName: ['YAHOO.ads.darla']});
                    this.status = 'loading';
                }
                return;
            }
        },
        loadSuccess: function() {
            Y.Sports.Ads.getAttempt = null;
            Y.Sports.Ads.status = 'ready';
        },
        loadFailure: function() {
            Y.Sports.Ads.getAttemptCount++;
            Y.Sports.Ads.status = (Y.Sports.Ads.getAttemptCount > 4) ? 'failed' : 'dead';
        },
        loadTimeout: function() {
            Y.Sports.Ads.status = 'dead';
        },
        createCallFrame: function() {
            var cfID = Y.Sports.Ads.config.callFrame;
            if (!document.getElementById(cfID)) {
                var callframe = document.createElement('iframe');
                callframe.id = cfID;
                callframe.style.display = 'none';
                document.body.appendChild(callframe);
            }
        },
        registerAd: function(position, elementID) {
            if (typeof Y.Sports.Ads.config.destinationMap[position] === 'undefined') {
                Y.Sports.Ads.config.destinationMap[position] = [];
            }
            if (typeof Y.Sports.Ads.config.destinationMap[position][elementID] === 'undefined') {
                Y.Sports.Ads.config.destinationMap[position].push(elementID);
            }
        },
        unregisterAd: function(position, elementID) {
            if (Y.Sports.Ads.config.destinationMap[position][elementID] != 'undefined') {
                var oldMap = Y.Sports.Ads.config.destinationMap[position];
                var newMap = [];
                for (i=0;i<oldMap.length;i++) {
                    if (oldMap[i] != elementID) {
                        newMap.push(oldMap[i]);
                    }
                }
                Y.Sports.Ads.config.destinationMap[position] = newMap;
            }
        },
        registerEvent: function(eventName, o) {
            if (typeof Y.Sports.Ads.config.events[eventName] === 'undefined') {
                return Y.Sports.Ads.config.events[eventName] = o;
            } else {
                return Y.Sports.Ads.config.events[eventName];
            }
        },
        subscribe: function(element, action, adObject) {
            return;
            if (this.status == 'dead') {
                return;
            }

            if (this.status != 'ready') {
                this.load();
                setTimeout(function() {
                    Y.Sports.Ads.subscribe(element, action, adObject); 
                }, 1000);
                return;
            }

            for (idx in adObject) {
                adObject[idx] = this.validateSiteAttributes(adObject[idx]);
            }

            var oIdx, oAdParam;
            if (typeof adObject === 'object') {
                for (idx in adObject) {
                    oIdx = idx;
                };
                oAdParam = this.registerEvent(oIdx, adObject[oIdx]);
            } else {
                oIdx = adObject;
                oAdParam = this.registerEvent(adObject);
            };
            var oAdConf = {action: oIdx, lv: oAdParam.lv};
            switch (action) {
                case 'now':
                    if (this.temp == null) {
                        this.temp = {};
                        this.temp.oAdConfArr = [];
                        this.temp.oAdConfArr.push(oAdConf);
                        setTimeout(this.fireInitialEvent, 0);
                    } else {
                        this.temp.oAdConfArr.push(oAdConf);
                    };
                    break;
                case 'pageload':
                    if (this.temp == null) {
                        this.temp = {};
                        this.temp.oAdConfArr = [];
                        this.temp.oAdConfArr.push(oAdConf);
                        Y.on('load', Y.Sports.Ads.fireInitialEvent);
                    } else {
                        this.temp.oAdConfArr.push(oAdConf);
                    };
                    break;
                default:
                    YAHOO.util.Event.on(element, action, this.fireEvent, oAdConf);
                    break;
            }
        },
        validateSiteAttributes: function(e) {
            var siteAttrs = '',
                newVal = '',
                emStr = '';

            e = (!e) ? {} : e ;
            e.em = e.em || {} ;

            siteAttrs = e.em['site-attribute'] || 'game=<?php echo $ad_stamp; ?>' ;

            if (siteAttrs.indexOf('game=') < 0) {
                if (e.em['site-attribute'] != '') {
                    siteAttrs = siteAttrs + 'game=<?php echo $ad_stamp; ?>;';
                } else {
                    siteAttrs = 'game=<?php echo $ad_stamp; ?>;';
                }
            }

            e.em['site-attribute'] = siteAttrs;

            for (idx in e.em) {
                if (emStr != '') {
                    emStr += ',';
                }
                newVal = (Y.Lang.isString(e.em[idx])) ? '\'' + e.em[idx] + '\'' : e.em[idx];
                emStr += (idx + ':' + newVal);
            }
            emStr = '{' + emStr + '}';

            e.em = encodeURIComponent(emStr);

            return e;
        },
        fireEvent: function(e, obj) {
            YAHOO.ads.darla.event(obj.action, {lv: obj.lv});
        },
        fireInitialEvent: function() {
            if (window.YAHOO.ads.darla) {
                YAHOO.ads.darla.setConfig(Y.Sports.Ads.config);
            }
            for (idx in Y.Sports.Ads.temp.oAdConfArr) {
                Y.Sports.Ads.fireEvent(null, Y.Sports.Ads.temp.oAdConfArr[idx]);
            }
            Y.Sports.Ads.temp.oAdConf = null;
            Y.Sports.Ads.temp = null;
            Y.later(2000, Y.Sports.Ads, Y.Sports.Ads.setRotation);
        },
        setRotation: function() {
            Y.Sports.Ads.config.rotation = Y.Sports.Ads.config.rotation = Y.Sports.Ads.config.finalRotation;
        },
        temp: null
    };

    Y.Sports.Ads.config = {
        callFrame: 'fccall',
        callScript: 'fc',
        rotation: 0,
        finalRotation: 3000,
        autoRotation: false,
        property: 'fantasy',
        destinationMap: {},
        events: {
            // ex: {"pageload" : { lv:1, sp:"791000026", ps:"LREC,RM,M,WS" }}
        }
    };

    Y.Sports.Ads.showAds = {
        'bracketwizard': true
    };

    YUI.namespace('Sports.Ads');
    YUI.Sports.Ads = Y.Sports.Ads;
});