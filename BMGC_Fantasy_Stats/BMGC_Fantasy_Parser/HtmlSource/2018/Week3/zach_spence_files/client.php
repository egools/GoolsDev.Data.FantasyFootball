
(function(win, input){

	function base64_decode(s){
		// for modern browsers
		// TODO: test the worst case (i.e. the custom code) if we are requesting this with phantomJS for testing
		if( win.atob ) return win.atob(s);
		// for IE and some mobile ones
		var out = "",
			chr1, chr2, chr3,
			enc1, enc2, enc3, enc4,
			i,len=s.length, iO='indexOf',cA='charAt', fCC=String.fromCharCode,
			lut = "ABCDEFGHIJKLMNOP" +
			      "QRSTUVWXYZabcdef" +
			      "ghijklmnopqrstuv" +
			      "wxyz0123456789+/" +
			      "=";
		for(i=0;i<len;){
			// get the encoded bytes
			enc1 = lut[iO](s[cA](i++));
			enc2 = lut[iO](s[cA](i++));
			enc3 = lut[iO](s[cA](i++));
			enc4 = lut[iO](s[cA](i++));
			// turn them into chars
			chr1 = (enc1 << 2) | (enc2 >> 4);
			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
			chr3 = ((enc3 & 3) << 6) | enc4;
			out += fCC(chr1);
			if (enc3 != 64) {
				out += fCC(chr2);
			}
			if (enc4 != 64) {
				out += fCC(chr3);
			}
		}
		return out;
	}
	/**
	 * Load a script in HEAD
	 *
	 * pass either uri or inner. one will set the SRC the other the .text
	 */
	function loadScript(uri, inner, sf) {
		var h = document.getElementsByTagName('head')[0] || document.documentElement,
			s = document.createElement('script');
		if( !sf ){
			s.type = 'text/javascript';
		}else{
			s.type = 'text/x-safeframe';
		}
		if( inner ){
			s.text = inner;
		}else{
			s.src = uri;
		}
		return h.appendChild(s);
	}

	/* TODO: pass input as plain JSON, not a string... and then assign it to
	 * win.DARLA_CONFIG=input;
	 * and call a new public method that will parse the positions list (currently inline-code in boot.js:_get_tags()
	*/
	loadScript( false, base64_decode(input), true );
	loadScript( "https://s.yimg.com/rq/darla/boot.js", false, false);

}(window, "eyJwb3NpdGlvbnMiOlt7ImlkIjoiRlNSVlkiLCJodG1sIjoiPHNjcmlwdCB0eXBlPSd0ZXh0XC9qYXZhc2NyaXB0Jz5kb2N1bWVudC53cml0ZShcIjwhLS0qXFxuXCIpO1xyXG5kb2N1bWVudC53cml0ZShcInZhciBhb2xBZElkPVxcXCIxMDYzMTYzNXwyNjUwNzUxMVxcXCI7XFxuXCIpO1xyXG5kb2N1bWVudC53cml0ZShcInZhciBhb2xTaXplPVxcXCIxfDFcXFwiO1xcblwiKTtcclxuZG9jdW1lbnQud3JpdGUoXCJ2YXIgYW9sRm9ybWF0PVxcXCIzcmRQYXJ0eVJpY2hNZWRpYVJlZGlyZWN0XFxcIjtcXG5cIik7XHJcbmRvY3VtZW50LndyaXRlKFwidmFyIGFvbEdVSUQ9XFxcIjE1OTU0NTYwMDh8NzUxNTk1NDAwNDcyODUwMzdcXFwiO1xcblwiKTtcclxuZG9jdW1lbnQud3JpdGUoXCJ2YXIgYWxpYXM9XFxcInk0MDAwMTdcXFwiO1xcblwiKTtcclxuZG9jdW1lbnQud3JpdGUoXCJ2YXIgYWxpYXMyPVxcXCJ5NDAwMDE3XFxcIjtcXG5cIik7XHJcbmRvY3VtZW50LndyaXRlKFwiKi0tPlxcblwiKTtcbnZhciBhcGlVcmw9XCJodHRwczpcL1wvb2FvLWpzLXRhZy5vbmVtb2JpbGUueWFob28uY29tXC9hZG1heFwvYWRNYXhBcGkuZG9cIjt2YXIgYWRTZXJ2ZVVybD1cImh0dHBzOlwvXC9vYW8tanMtdGFnLm9uZW1vYmlsZS55YWhvby5jb21cL2FkbWF4XC9hZFNlcnZlLmRvXCI7ZnVuY3Rpb24gQWRNYXhBZENsaWVudCgpe3ZhciBiPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwMDAwKTt0aGlzLnNjcmlwdElkPVwiU2NyaXB0SWRfXCIrYjt0aGlzLmRpdklkPVwiYWRcIitiO3RoaXMucmVuZGVyQWQ9ZnVuY3Rpb24oYSl7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtkLnNldEF0dHJpYnV0ZShcInNyY1wiLGEpO2Quc2V0QXR0cmlidXRlKFwiaWRcIix0aGlzLnNjcmlwdElkKTtkb2N1bWVudC53cml0ZSgnPGRpdiBpZD1cIicrdGhpcy5kaXZJZCsnXCIgc3R5bGU9XCJ0ZXh0LWFsaWduOmNlbnRlcjtcIj4nKTtkb2N1bWVudC53cml0ZSgnPHNjcmlwdCB0eXBlPVwidGV4dFwvamF2YXNjcmlwdFwiIGlkPVwiJyt0aGlzLnNjcmlwdElkKydcIiBzcmM9XCInK2ErJ1wiID48XFxcL3NjcmlwdD4nKTtkb2N1bWVudC53cml0ZShcIjxcL2Rpdj5cIil9LHRoaXMuYnVpbGRSZXF1ZXN0VVJMPWZ1bmN0aW9uKGEsZyl7dmFyIGg9YStcIj9jVGFnPVwiK3RoaXMuZGl2SWQ7Zm9yKGkgaW4gZyl7aCs9XCImXCIraStcIj1cIitlc2NhcGUoZ1tpXSl9cmV0dXJuIGh9LHRoaXMuZ2V0QWQ9ZnVuY3Rpb24oZCl7dmFyIGE9dGhpcy5idWlsZFJlcXVlc3RVUkwoYWRTZXJ2ZVVybCxkKTt0aGlzLnJlbmRlckFkKGEpfX12YXIgcGFyYW1zO2Z1bmN0aW9uIGFkbWF4QWRDYWxsYmFjaygpe3BhcmFtcy51YT1uYXZpZ2F0b3IudXNlckFnZW50O3BhcmFtcy5vZj1cImpzXCI7dmFyIGM9Z2V0U2QoKTtpZihjKXtwYXJhbXMuc2Q9Y312YXIgZD1uZXcgQWRNYXhDbGllbnQoKTtkLmFkbWF4QWQocGFyYW1zKX1mdW5jdGlvbiBhZG1heEFkKGQpe2QudWE9bmF2aWdhdG9yLnVzZXJBZ2VudDtkLm9mPVwianNcIjt2YXIgZj1nZXRTZCgpO2lmKGYpe2Quc2Q9Zn12YXIgZT1uZXcgQWRNYXhBZENsaWVudCgpO2UuZ2V0QWQoZCl9ZnVuY3Rpb24gZ2V0WE1MSHR0cFJlcXVlc3QoKXtpZih3aW5kb3cuWE1MSHR0cFJlcXVlc3Qpe2lmKHR5cGVvZiBYRG9tYWluUmVxdWVzdCE9XCJ1bmRlZmluZWRcIil7cmV0dXJuIG5ldyBYRG9tYWluUmVxdWVzdCgpfWVsc2V7cmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdCgpfX1lbHNle3JldHVybiBuZXcgQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxIVFRQXCIpfX1mdW5jdGlvbiBpbmNsdWRlSlMoYyxqLGQpe3ZhciBnPU1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMDAwMDAwKTt2YXIgYj1cImFkXCIrZzt2YXIgaz1cIlNjcmlwdElkX1wiK2c7ZG9jdW1lbnQud3JpdGUoJzxkaXYgaWQ9XCInK2IrJ1wiIHN0eWxlPVwidGV4dC1hbGlnbjpjZW50ZXI7XCI+Jyk7ZG9jdW1lbnQud3JpdGUoJzxzY3JpcHQgdHlwZT1cInRleHRcL2phdmFzY3JpcHRcIiBpZD1cIicraysnXCIgPicpO2RvY3VtZW50LndyaXRlKGopO2RvY3VtZW50LndyaXRlKFwiPFxcXC9zY3JpcHQ+XCIpO2RvY3VtZW50LndyaXRlKFwiPFwvZGl2PlwiKTtpZihkKXtkKCl9fWZ1bmN0aW9uIGVuY29kZVBhcmFtcyhjKXt2YXIgZD1cIlwiO2ZvcihpIGluIGMpe2QrPVwiJlwiK2krXCI9XCIrZXNjYXBlKGNbaV0pfXJldHVybiBkfWZ1bmN0aW9uIGxvZyhiKXt9ZnVuY3Rpb24gYXJlX2Nvb2tpZXNfZW5hYmxlZCgpe3ZhciBiPShuYXZpZ2F0b3IuY29va2llRW5hYmxlZCk/dHJ1ZTpmYWxzZTtpZih0eXBlb2YgbmF2aWdhdG9yLmNvb2tpZUVuYWJsZWQ9PVwidW5kZWZpbmVkXCImJiFiKXtkb2N1bWVudC5jb29raWU9XCJ0ZXN0bnhcIjtiPShkb2N1bWVudC5jb29raWUuaW5kZXhPZihcInRlc3RueFwiKSE9LTEpP3RydWU6ZmFsc2V9cmV0dXJuKGIpfWZ1bmN0aW9uIHJlYWRDb29raWUoYyl7aWYoZG9jdW1lbnQuY29va2llKXt2YXIgaj1jK1wiPVwiO3ZhciBnPWRvY3VtZW50LmNvb2tpZS5zcGxpdChcIjtcIik7Zm9yKHZhciBrPTA7azxnLmxlbmd0aDtrKyspe3ZhciBoPWdba107d2hpbGUoaC5jaGFyQXQoMCk9PVwiIFwiKXtoPWguc3Vic3RyaW5nKDEsaC5sZW5ndGgpfWlmKGguaW5kZXhPZihqKT09MCl7cmV0dXJuIGguc3Vic3RyaW5nKGoubGVuZ3RoLGgubGVuZ3RoKX19fXJldHVybiBudWxsfWZ1bmN0aW9uIGdlbmVyYXRlR3VpZCgpe3JldHVyblwieHh4eHh4eHh4eHh4NHh4eHl4eHh4eHh4eHh4eHh4eHhcIi5yZXBsYWNlKFwvW3h5XVwvZyxmdW5jdGlvbihmKXt2YXIgYz1NYXRoLnJhbmRvbSgpKjE2fDAsZT1mPT1cInhcIj9jOihjJjN8OCk7cmV0dXJuIGUudG9TdHJpbmcoMTYpfSl9ZnVuY3Rpb24gY3JlYXRlQ29va2llKGssaixoKXt2YXIgZz1cIlwiO2lmKGgpe3ZhciBmPW5ldyBEYXRlKCk7Zi5zZXRUaW1lKGYuZ2V0VGltZSgpKyhoKjI0KjYwKjYwKjEwMDApKTtnPVwiO2V4cGlyZXM9XCIrZi50b0dNVFN0cmluZygpfWVsc2V7Zz1cIlwifWRvY3VtZW50LmNvb2tpZT1rK1wiPVwiK2orZytcIjsgcGF0aD1cL1wifWZ1bmN0aW9uIGdldFN1aWQoKXtpZihhcmVfY29va2llc19lbmFibGVkKCkpe3ZhciBkPXJlYWRDb29raWUoXCJuZXhhZ2VzdWlkXCIpO2lmKGQpe3JldHVybiBkfWVsc2V7dmFyIGM9Z2VuZXJhdGVHdWlkKCk7Y3JlYXRlQ29va2llKFwibmV4YWdlc3VpZFwiLGMsMzY1KX19cmV0dXJuIG51bGx9ZnVuY3Rpb24gZ2V0U2QoKXtpZihhcmVfY29va2llc19lbmFibGVkKCkpe3ZhciBiPXJlYWRDb29raWUoXCJuZXhhZ2VzZFwiKTtpZihiKXtiKys7aWYoYj4xMCl7cmV0dXJuXCIwXCJ9Y3JlYXRlQ29va2llKFwibmV4YWdlc2RcIixiLDAuMDEpO3JldHVybiBifWVsc2V7Y3JlYXRlQ29va2llKFwibmV4YWdlc2RcIiwxLDAuMDEpO3JldHVybiAxfX1yZXR1cm4gbnVsbH07XG52YXIgc3VpZCA9IGdldFN1aWQoKTtcbnZhciBhZG1heF92YXJzID0ge1xuXCJicnhkU2VjdGlvbklkXCI6IFwiMTIxMTI5NTUxXCIsXG5cImJyeGRQdWJsaXNoZXJJZFwiOiBcIjIwNDU5OTMzMjIzXCIsXG5cInlwdWJibG9iXCI6IFwifGdZcFhiRGN5TGpPbVJzQnQ5dXZnMkFILk5qY3VNUUFBQUFBTW9KYWl8NzgyMjAwOTk5fEZTUlZZfDQ1NjAwNzc4M1wiLFxuXCJyZXEodXJsKVwiOiBcImh0dHBzOlwvXC9mb290YmFsbC5mYW50YXN5c3BvcnRzLnlhaG9vLmNvbVwvXCIsXG5cInNlY3VyZVwiOiBcIjFcIixcblwiYnJ4ZFNpdGVJZFwiOiBcIjQ0NTc1NTFcIixcblwiZGNuXCI6IFwiYnJ4ZDQ0NTc1NTFcIixcblwieWFkcG9zXCI6IFwiRlNSVllcIixcblwicG9zXCI6IFwieTQwMDAxN1wiLFxuXCJjc3J0eXBlXCI6IFwiNVwiLFxuXCJ5Ymt0XCI6IFwiXCIsXG5cInVzX3ByaXZhY3lcIjogXCJcIixcblwid2RcIjogXCIxXCIsXG5cImh0XCI6IFwiMVwiXG59O1xuaWYgKHN1aWQpIGFkbWF4X3ZhcnNbXCJ1KGlkKVwiXT1zdWlkO1xuYWRtYXhBZChhZG1heF92YXJzKTtcblxuXG5cblxuZG9jdW1lbnQud3JpdGUoXCI8IS0tKlxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIG1vYXRDbGllbnRMZXZlbDE9NTExM1xcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIG1vYXRDbGllbnRMZXZlbDI9Mzc0MDU4XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgbW9hdENsaWVudExldmVsMz0wXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgbW9hdENsaWVudExldmVsND00ODQ4Njg5XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRNYXN0ZXI9MTA0MzMzODlcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdEZsaWdodD0xMDYzMTYzNVxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0QmFubmVyPTI2NTA3NTExXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgelVSTD1odHRwc1xcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0UGxhY2VtZW50SWQ9NDg0ODY4OVxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0UGxhY2VtZW50RXh0SWQ9OTYzODg0MzczXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRBZElkPTEwNjMxNjM1XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRDcmVhdGl2ZT0wXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRCYW5uZXJJRD0zXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRDdXN0b21WaXNwPTUwXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRDdXN0b21WaXN0PTEwMDBcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdElzQWR2aXNHb2FsPTBcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdEV2ZW50VXJsPWh0dHBzOlwvXC91cy55LmF0d29sYS5jb21cL2FkY291bnR8Mi4wfDUxMTMuMXw0ODQ4Njg5fDB8MTZ8QWRJZD0xMDYzMTYzNTtCbklkPTM7Y3Q9MjExODg5ODQ3O3N0PTI0MDE7YWRjaWQ9MTtpdGltZT00NTYwMDc3ODM7cmVxdHlwZT01OztpbXByZWY9MTU5NTQ1NjAwODQzODkxNzYyNDtpbXByZWZzZXE9NzUxNTk1NDAwNDcyODUwMzc7aW1wcmVmdHM9MTU5NTQ1NjAwODthZGNsbnRpZD0xMDA0O3NwYWNlaWQ9NzgyMjAwOTk5O2FkcG9zaXRpb249RlNSVlk7bG1zaWQ9O3B2aWQ9Z1lwWGJEY3lMak9tUnNCdDl1dmcyQUguTmpjdU1RQUFBQUFNb0phaTtzZWN0aW9uaWQ9MTIxMTI5NTUxO2t2c2VjdXJlJTJEZGFybGE9NCUyRDIlMkQxJTdDeXNkJTdDMjtrdm1uPXk0MDAwMTc7a3Zzc3A9c3NwO2t2c2VjdXJlPXRydWU7a3ZwZ2NvbG89YmYxO2t2YWR0YyU1RmR2bWt0bmFtZT11bmtub3duO2t2YWR0YyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2YnJhbmQ9Z29vZ2xlO2t2YWR0YyU1RmR2dHlwZT1kZXNrdG9wO2t2YWR0YyU1RmR2bW9kZWw9Y2hyb21lJTVGJTJEJTVGd2luZG93cztrdnJlcG8lNUZkdm9zcGx0PXdpbmRvd3MlNUYxMDtrdmFkdGMlNUZkdm9zdmVyc2lvbj1OVCUyMDEwJTJFMDtrdmFkdGMlNUZjcm1jYz1VTktOT1dOO2t2YWR0YyU1RmNybW5jPVVOS05PV047Z2Rwcj0wO1xcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0U2l6ZT0xNlxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0U3ViTmV0SUQ9MVxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0aXNTZWxlY3RlZD0wXFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRhZFNlcnZlcj11cy55LmF0d29sYS5jb21cXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdGFkVmlzU2VydmVyPVxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0U2FtcGxpbmdSYXRlPTVcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdGxpdmVUZXN0Q29va2llPVxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIHpNb2F0UmVmU2VxSWQ9dHNBQVdRVEJMRUFcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdEltcFJlZlRzPTE1OTU0NTYwMDhcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdEFsaWFzPXk0MDAwMTdcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdFdlYnNpdGVJRD0zNzQwNThcXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciB6TW9hdFZlcnQ9XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgek1vYXRCYW5uZXJJbmZvPTQ4ODkyMzc2MFxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIFJlZnJlc2hTbWFsbD1cXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciBSZWZyZXNoTGFyZ2U9XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgUmVmcmVzaEV4Y2x1c2l2ZT1cXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciBSZWZyZXNoUmVzZXJ2ZWQ9XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgUmVmcmVzaFRpbWU9XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgUmVmcmVzaE1heD1cXG5cIik7XG5kb2N1bWVudC53cml0ZShcInZhciBSZWZyZXNoS2VlcFNpemU9XFxuXCIpO1xuZG9jdW1lbnQud3JpdGUoXCJ2YXIgTVA9TlxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwidmFyIEFkVHlwZVByaW9yaXR5PTE0MFxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwiKi0tPlxcblwiKTtcbmRvY3VtZW50LndyaXRlKFwiPHNjclwiK1wiaXB0IHNyYz1cXFwiXCIrKHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbD09J2h0dHBzOicgPyBcImh0dHBzOlwvXC9ha2EtY2RuLmFkdGVjaHVzLmNvbVwiIDogXCJodHRwOlwvXC9ha2EtY2RuLW5zLmFkdGVjaHVzLmNvbVwiKStcIlwvbWVkaWFcL21vYXRcL2FkdGVjaGJyYW5kczA5MjM0OGZqbHNtZGhsd3NsMjM5ZmgzZGZcL21vYXRhZC5qcyNtb2F0Q2xpZW50TGV2ZWwxPTUxMTMmbW9hdENsaWVudExldmVsMj0zNzQwNTgmbW9hdENsaWVudExldmVsMz0wJm1vYXRDbGllbnRMZXZlbDQ9NDg0ODY4OSZ6TW9hdE1hc3Rlcj0xMDQzMzM4OSZ6TW9hdEZsaWdodD0xMDYzMTYzNSZ6TW9hdEJhbm5lcj0yNjUwNzUxMSZ6VVJMPWh0dHBzJnpNb2F0UGxhY2VtZW50SWQ9NDg0ODY4OSZ6TW9hdEFkSWQ9MTA2MzE2MzUmek1vYXRDcmVhdGl2ZT0wJnpNb2F0QmFubmVySUQ9MyZ6TW9hdEN1c3RvbVZpc3A9NTAmek1vYXRDdXN0b21WaXN0PTEwMDAmek1vYXRJc0FkdmlzR29hbD0wJnpNb2F0RXZlbnRVcmw9aHR0cHM6XC9cL3VzLnkuYXR3b2xhLmNvbVwvYWRjb3VudHwyLjB8NTExMy4xfDQ4NDg2ODl8MHwxNnxBZElkPTEwNjMxNjM1O0JuSWQ9MztjdD0yMTE4ODk4NDc7c3Q9MjQ2MjthZGNpZD0xO2l0aW1lPTQ1NjAwNzc4MztyZXF0eXBlPTU7O2ltcHJlZj0xNTk1NDU2MDA4NDM4OTE3NjI0O2ltcHJlZnNlcT03NTE1OTU0MDA0NzI4NTAzNztpbXByZWZ0cz0xNTk1NDU2MDA4O2FkY2xudGlkPTEwMDQ7c3BhY2VpZD03ODIyMDA5OTk7YWRwb3NpdGlvbj1GU1JWWTtsbXNpZD07cHZpZD1nWXBYYkRjeUxqT21Sc0J0OXV2ZzJBSC5OamN1TVFBQUFBQU1vSmFpO3NlY3Rpb25pZD0xMjExMjk1NTE7a3ZzZWN1cmUlMkRkYXJsYT00JTJEMiUyRDElN0N5c2QlN0MyO2t2bW49eTQwMDAxNztrdnNzcD1zc3A7a3ZzZWN1cmU9dHJ1ZTtrdnBnY29sbz1iZjE7a3ZhZHRjJTVGZHZta3RuYW1lPXVua25vd247a3ZhZHRjJTVGZHZvc3BsdD13aW5kb3dzJTVGMTA7a3ZhZHRjJTVGZHZicmFuZD1nb29nbGU7a3ZhZHRjJTVGZHZ0eXBlPWRlc2t0b3A7a3ZhZHRjJTVGZHZtb2RlbD1jaHJvbWUlNUYlMkQlNUZ3aW5kb3dzO2t2cmVwbyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2b3N2ZXJzaW9uPU5UJTIwMTAlMkUwO2t2YWR0YyU1RmNybWNjPVVOS05PV047a3ZhZHRjJTVGY3JtbmM9VU5LTk9XTjtnZHByPTA7JnpNb2F0U2l6ZT0xNiZ6TW9hdFN1Yk5ldElEPTEmek1vYXRpc1NlbGVjdGVkPTAmek1vYXRhZFNlcnZlcj11cy55LmF0d29sYS5jb20mek1vYXRhZFZpc1NlcnZlcj0mek1vYXRTYW1wbGluZ1JhdGU9NSZ6TW9hdGxpdmVUZXN0Q29va2llPSZ6TW9hdFJlZlNlcUlkPXRzQUFXUVRCTEVBJnpNb2F0SW1wUmVmVHM9MTU5NTQ1NjAwOCZ6TW9hdEFsaWFzPXk0MDAwMTcmek1vYXRWZXJ0PSZ6TW9hdEJhbm5lckluZm89NDg4OTIzNzYwXFxcIiB0eXBlPVxcXCJ0ZXh0XC9qYXZhc2NyaXB0XFxcIj48XC9zY3JcIitcImlwdD5cIik7XG48XC9zY3JpcHQ+IiwibG93SFRNTCI6IiIsIm1ldGEiOnsieSI6eyJwb3MiOiJGU1JWWSIsImNzY0hUTUwiOiI8aW1nIHdpZHRoPTEgaGVpZ2h0PTEgYWx0PVwiXCIgc3JjPVwiaHR0cHM6XC9cL3VzLnkuYXR3b2xhLmNvbVwvYWRjb3VudHwyLjB8NTExMy4xfDQ4NDg2ODl8MHwxNnxBZElkPTEwNjMxNjM1O0JuSWQ9MztjdD0yMTE4ODk4NDc7c3Q9MjYyNTthZGNpZD0xO2l0aW1lPTQ1NjAwNzc4MztyZXF0eXBlPTU7O2ltcHJlZj0xNTk1NDU2MDA4NDM4OTE3NjI0O2ltcHJlZnNlcT03NTE1OTU0MDA0NzI4NTAzNztpbXByZWZ0cz0xNTk1NDU2MDA4O2FkY2xudGlkPTEwMDQ7c3BhY2VpZD03ODIyMDA5OTk7YWRwb3NpdGlvbj1GU1JWWTtsbXNpZD07cHZpZD1nWXBYYkRjeUxqT21Sc0J0OXV2ZzJBSC5OamN1TVFBQUFBQU1vSmFpO3NlY3Rpb25pZD0xMjExMjk1NTE7a3ZzZWN1cmUlMkRkYXJsYT00JTJEMiUyRDElN0N5c2QlN0MyO2t2bW49eTQwMDAxNztrdnNzcD1zc3A7a3ZzZWN1cmU9dHJ1ZTtrdnBnY29sbz1iZjE7a3ZhZHRjJTVGZHZta3RuYW1lPXVua25vd247a3ZhZHRjJTVGZHZvc3BsdD13aW5kb3dzJTVGMTA7a3ZhZHRjJTVGZHZicmFuZD1nb29nbGU7a3ZhZHRjJTVGZHZ0eXBlPWRlc2t0b3A7a3ZhZHRjJTVGZHZtb2RlbD1jaHJvbWUlNUYlMkQlNUZ3aW5kb3dzO2t2cmVwbyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2b3N2ZXJzaW9uPU5UJTIwMTAlMkUwO2t2YWR0YyU1RmNybWNjPVVOS05PV047a3ZhZHRjJTVGY3JtbmM9VU5LTk9XTjtnZHByPTA7XCI+IiwiY3NjVVJJIjoiaHR0cHM6XC9cL3VzLnkuYXR3b2xhLmNvbVwvYWRjb3VudHwyLjB8NTExMy4xfDQ4NDg2ODl8MHwxNnxBZElkPTEwNjMxNjM1O0JuSWQ9MztjdD0yMTE4ODk4NDc7c3Q9MjYyNTthZGNpZD0xO2l0aW1lPTQ1NjAwNzc4MztyZXF0eXBlPTU7O2ltcHJlZj0xNTk1NDU2MDA4NDM4OTE3NjI0O2ltcHJlZnNlcT03NTE1OTU0MDA0NzI4NTAzNztpbXByZWZ0cz0xNTk1NDU2MDA4O2FkY2xudGlkPTEwMDQ7c3BhY2VpZD03ODIyMDA5OTk7YWRwb3NpdGlvbj1GU1JWWTtsbXNpZD07cHZpZD1nWXBYYkRjeUxqT21Sc0J0OXV2ZzJBSC5OamN1TVFBQUFBQU1vSmFpO3NlY3Rpb25pZD0xMjExMjk1NTE7a3ZzZWN1cmUlMkRkYXJsYT00JTJEMiUyRDElN0N5c2QlN0MyO2t2bW49eTQwMDAxNztrdnNzcD1zc3A7a3ZzZWN1cmU9dHJ1ZTtrdnBnY29sbz1iZjE7a3ZhZHRjJTVGZHZta3RuYW1lPXVua25vd247a3ZhZHRjJTVGZHZvc3BsdD13aW5kb3dzJTVGMTA7a3ZhZHRjJTVGZHZicmFuZD1nb29nbGU7a3ZhZHRjJTVGZHZ0eXBlPWRlc2t0b3A7a3ZhZHRjJTVGZHZtb2RlbD1jaHJvbWUlNUYlMkQlNUZ3aW5kb3dzO2t2cmVwbyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2b3N2ZXJzaW9uPU5UJTIwMTAlMkUwO2t2YWR0YyU1RmNybWNjPVVOS05PV047a3ZhZHRjJTVGY3JtbmM9VU5LTk9XTjtnZHByPTA7IiwiYmVoYXZpb3IiOiJub25fZXhwIiwiYWRJRCI6IjEwNjMxNjM1IiwibWF0Y2hJRCI6Ijk5OTk5OS45OTk5OTkuOTk5OTk5Ljk5OTk5OSIsImJvb2tJRCI6IjEwNjMxNjM1Iiwic2xvdElEIjoiMCIsInNlcnZlVHlwZSI6IjgiLCJ0dGwiOi0xLCJlcnIiOmZhbHNlLCJoYXNFeHRlcm5hbCI6ZmFsc2UsInN1cHBfdWdjIjoiMCIsInBsYWNlbWVudElEIjoiMTA2MzE2MzUiLCJmZGIiOm51bGwsInNlcnZlVGltZSI6LTEsImltcElEIjoiLTEiLCJjcmVhdGl2ZUlEIjoyNjUwNzUxMSwiYWRjIjoie1wibGFiZWxcIjpcIkFkQ2hvaWNlc1wiLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL2luZm8ueWFob28uY29tXFxcL3ByaXZhY3lcXFwvdXNcXFwveWFob29cXFwvcmVsZXZhbnRhZHMuaHRtbFwiLFwiY2xvc2VcIjpcIkNsb3NlXCIsXCJjbG9zZUFkXCI6XCJDbG9zZSBBZFwiLFwic2hvd0FkXCI6XCJTaG93IGFkXCIsXCJjb2xsYXBzZVwiOlwiQ29sbGFwc2VcIixcImZkYlwiOlwiSSBkb24ndCBsaWtlIHRoaXMgYWRcIixcImNvZGVcIjpcImVuLXVzXCJ9IiwiaXMzcmQiOjEsImZhY1N0YXR1cyI6eyJmZWRTdGF0dXNDb2RlIjoiMCIsImZlZFN0YXR1c01lc3NhZ2UiOiJmZWRlcmF0aW9uIGlzIG5vdCBjb25maWd1cmVkIGZvciBhZCBzbG90IiwiZXhjbHVzaW9uU3RhdHVzIjp7ImVmZmVjdGl2ZUNvbmZpZ3VyYXRpb24iOnsiaGFuZGxlIjoiNzgyMjAwMDAxX1VTU3BvcnRzRmFudGFzeSIsImlzTGVnYWN5Ijp0cnVlLCJydWxlcyI6W3siZ3JvdXBzIjpbWyJMRFJCIl1dLCJwcmlvcml0eV90eXBlIjoiZWNwbSJ9XSwic3BhY2VpZCI6Ijc4MjIwMDAwMSJ9LCJlbmFibGVkIjp0cnVlLCJwb3NpdGlvbnMiOnsiTERSQiI6eyJleGNsdXNpdmUiOmZhbHNlLCJmYWxsQmFjayI6ZmFsc2UsIm5vQWQiOmZhbHNlLCJwYXNzYmFjayI6ZmFsc2UsInByaW9yaXR5IjpmYWxzZX19LCJyZXBsYWNlZCI6IiIsIndpbm5lcnMiOlt7Imdyb3VwIjowLCJwb3NpdGlvbnMiOiJMRFJCIiwicnVsZSI6MCwid2luVHlwZSI6ImVjcG0ifV19fSwidXNlclByb3ZpZGVkRGF0YSI6e30sImZhY1JvdGF0aW9uIjp7fSwic2xvdERhdGEiOnsidHJ1c3RlZF9jdXN0b20iOiJmYWxzZSIsImZyZXFjYXBwZWQiOiJmYWxzZSIsImRlbGl2ZXJ5IjoiMSIsInBhY2luZyI6IjEiLCJleHBpcmVzIjoiMjk2NTU5MzIiLCJjb21wYW5pb24iOiJmYWxzZSIsImV4Y2x1c2l2ZSI6ImZhbHNlIiwicmVkaXJlY3QiOiJ0cnVlIiwicHZpZCI6ImdZcFhiRGN5TGpPbVJzQnQ5dXZnMkFILk5qY3VNUUFBQUFBTW9KYWkifSwic2l6ZSI6IjF4MSJ9fSwiY29uZiI6eyJ3IjoxLCJoIjoxfX0seyJpZCI6IkxEUkIiLCJodG1sIjoiPHNjcmlwdCB0eXBlPSd0ZXh0XC9qYXZhc2NyaXB0Jz52YXIgYWRDb250ZW50ID0gJyc7XG5hZENvbnRlbnQgKz0gJzxkaXYgaWQ9XCJhLWQ3NjAyXCI+JyArICdcXG4nO1xuYWRDb250ZW50ICs9ICc8IS0tIEFkUGxhY2VtZW50IDogeTQwMTcyOCAtLT48IS0tIFZlcml6b24gTWVkaWEgU1NQIEJhbm5lckFkIERzcElkOjUxMTAsIFNlYXRJZDoyLCBEc3BDcklkOjM5Mjg2NTI0ODM5NSwgQ3JzQ3JJZDozMTM2NGE3OGViZjExZDMzMTFkYjAwOTBkMTNkZDllMjdkYjExZGVhIC0tPjxpJyArICdtZyBzcmM9XCJodHRwczpcL1wvcHJvZC1tLW5vZGUtMTExMS5zc3AuYWR2ZXJ0aXNpbmcuY29tXC9hZG1heFwvYWRFdmVudC5kbz90aWRpPTc3MDc3MTMyNyZhbXA7c2l0ZXBpZD0yMTc2MzQmYW1wO3Bvc2k9Nzg1NDYxJmFtcDtncnA9JTNGJTNGJTNGJmFtcDtubD0xNTk1NDU2MDA4NDI2JmFtcDtydHM9MTU5NTQ1NjAwODI4OCZhbXA7cGl4PTEmYW1wO2V0PTEmYW1wO2E9Z1lwWGJEY3lMak9tUnNCdDl1dmcyQUguTmpjdU1RQUFBQUFNb0phaS0wJmFtcDttPWFYQXRNVEF0TWpJdE5TMHpOQS4uJmFtcDtwPU1DNHdNREF3TlRJd05EayZhbXA7Yj1PVE0zTkRzeU8yRnRaWEpwWTJGdWMzUmhibVJoY21SM1lXeHJhVzVpWVhSb2N5NWpiMjA3T3pzN01HRmlNREEzT0dVMlpqWXhOR1JrTkdKak5tRTVPREk0TlRobVpXVmxNamM3TWprek9EZ3pOalk3TVRVNU5UUTBPVGd3TUEuLiZhbXA7eGRpPVB6OF9mRDhfUDN3X1B6OThNQS4uJmFtcDt4b2k9TUh4VlUwRS4mYW1wO2hiPXRydWUmYW1wO3R5cGU9MCZhbXA7YWY9MiZhbXA7YnJ4ZFB1Ymxpc2hlcklkPTIwNDU5OTMzMjIzJmFtcDticnhkU2l0ZUlkPTQ0NTc1NTEmYW1wO2JyeGRTZWN0aW9uSWQ9MTIxMTI5NTUxJmFtcDtkZXR5PTJcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTt3aWR0aDoxcHg7aGVpZ2h0OjFweDtib3JkZXI6MDtcIiB3aWR0aD1cIjFcIiBoZWlnaHQ9XCIxXCIgYWx0PVwiXCJcLz48c2NyJyArICdpcHQgZGF0YS1qYz1cIjc3XCIgZGF0YS1qYy12ZXJzaW9uPVwicjIwMjAwNzIxXCI+KGZ1bmN0aW9uKCl7XC8qICBDb3B5cmlnaHQgVGhlIENsb3N1cmUgTGlicmFyeSBBdXRob3JzLiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMCAqXC8gdmFyIGc9dGhpc3x8c2VsZjtmdW5jdGlvbiBrKGIpe2tbXCIgXCJdKGIpO3JldHVybiBifWtbXCIgXCJdPWZ1bmN0aW9uKCl7fTt2YXIgbD1cL15odHRwcz86XFxcXFwvXFxcXFwvKFxcXFx3fC0pK1xcXFwuY2RuXFxcXC5hbXBwcm9qZWN0XFxcXC4obmV0fG9yZykoXFxcXD98XFxcXFwvfCQpXC87IGZ1bmN0aW9uIG0oKXt2YXIgYj1nO3ZhciBjPVtdO3ZhciBkPW51bGw7ZG97dmFyIGE9Yjt0cnl7dmFyIGU7aWYoZT0hIWEmJm51bGwhPWEubG9jYXRpb24uaHJlZiliOnt0cnl7ayhhLmZvbyk7ZT0hMDticmVhayBifWNhdGNoKHApe31lPSExfXZhciBoPWV9Y2F0Y2gocCl7aD0hMX1pZihoKXt2YXIgZj1hLmxvY2F0aW9uLmhyZWY7ZD1hLmRvY3VtZW50JiZhLmRvY3VtZW50LnJlZmVycmVyfHxudWxsfWVsc2UgZj1kLGQ9bnVsbDtjLnB1c2gobmV3IG4oZnx8XCJcIikpO3RyeXtiPWEucGFyZW50fWNhdGNoKHApe2I9bnVsbH19d2hpbGUoYiYmYSE9Yik7YT0wO2ZvcihiPWMubGVuZ3RoLTE7YTw9YjsrK2EpY1thXS5kZXB0aD1iLWE7YT1nO2lmKGEubG9jYXRpb24mJmEubG9jYXRpb24uYW5jZXN0b3JPcmlnaW5zJiZhLmxvY2F0aW9uLmFuY2VzdG9yT3JpZ2lucy5sZW5ndGg9PWMubGVuZ3RoLTEpZm9yKGI9MTtiPGMubGVuZ3RoOysrYilmPWNbYl0sZi51cmx8fChmLnVybD1hLmxvY2F0aW9uLmFuY2VzdG9yT3JpZ2luc1tiLSAxXXx8XCJcIixmLmI9ITApO2E9bmV3IG4oZy5sb2NhdGlvbi5ocmVmLCExKTtmPW51bGw7Zm9yKGQ9Yj1jLmxlbmd0aC0xOzA8PWQ7LS1kKWlmKGg9Y1tkXSwhZiYmbC50ZXN0KGgudXJsKSYmKGY9aCksaC51cmwmJiFoLmIpe2E9aDticmVha31mPW51bGw7ZD1jLmxlbmd0aCYmY1tiXS51cmw7MCE9YS5kZXB0aCYmZCYmKGY9Y1tiXSk7Yz1uZXcgcShhLGYpO3JldHVybiBjLmE/Yy5hLnVybDpjLmMudXJsfWZ1bmN0aW9uIHEoYixjKXt0aGlzLmM9Yjt0aGlzLmE9Y31mdW5jdGlvbiBuKGIsYyl7dGhpcy51cmw9Yjt0aGlzLmI9ISFjO3RoaXMuZGVwdGg9bnVsbH07ZnVuY3Rpb24gcigpe3ZhciBiPW0oKSxjPWIuaW5kZXhPZihcIj9cIik7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBkPXZvaWQgMD09PWQ/LjAxOmQ7aWYoIShNYXRoLnJhbmRvbSgpPmQpKXt2YXIgYT1kb2N1bWVudC5jdXJyZW50U2NyaXB0O2E9KGE9dm9pZCAwPT09YT9udWxsOmEpJiY3Nz09YS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWpjXCIpP2E6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcXCdbZGF0YS1qYz1cIjc3XCJdXFwnKTtkPVwiaHR0cHM6XC9cL3BhZ2VhZDIuZ29vZ2xlc3luZGljYXRpb24uY29tXC9wYWdlYWRcL2dlbl8yMDQ/aWQ9amNhJmpjPTc3JnZlcnNpb249XCIrKGEmJmEuZ2V0QXR0cmlidXRlKFwiZGF0YS1qYy12ZXJzaW9uXCIpfHxcInVua25vd25cIikrXCImc2FtcGxlPVwiK2Q7YT13aW5kb3c7dmFyIGU7aWYoZT1hLm5hdmlnYXRvcillPWEubmF2aWdhdG9yLnVzZXJBZ2VudCxlPVwvQ2hyb21lXC8udGVzdChlKSYmIVwvRWRnZVwvLnRlc3QoZSk/ITA6ITE7ZSYmYS5uYXZpZ2F0b3Iuc2VuZEJlYWNvbj8gYS5uYXZpZ2F0b3Iuc2VuZEJlYWNvbihkKTooYS5nb29nbGVfaW1hZ2VfcmVxdWVzdHN8fChhLmdvb2dsZV9pbWFnZV9yZXF1ZXN0cz1bXSksZT1hLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiksZS5zcmM9ZCxhLmdvb2dsZV9pbWFnZV9yZXF1ZXN0cy5wdXNoKGUpKX19LDApO3JldHVybiAwPD1jP2Iuc3Vic3RyaW5nKDAsYyk6Yn1mdW5jdGlvbiB0KCl7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChyKCkpfXZhciB1PVtcInJmbFwiXSx2PWc7dVswXWluIHZ8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiB2LmV4ZWNTY3JpcHR8fHYuZXhlY1NjcmlwdChcInZhciBcIit1WzBdKTtmb3IodmFyIHc7dS5sZW5ndGgmJih3PXUuc2hpZnQoKSk7KXUubGVuZ3RofHx2b2lkIDA9PT10P3Zbd10mJnZbd10hPT1PYmplY3QucHJvdG90eXBlW3ddP3Y9dlt3XTp2PXZbd109e306dlt3XT10O30pLmNhbGwodGhpcyk7PFwvc2NyJyArICdpcHQ+PGlmcmFtZSBpZD1cImdvb2dsZV9kZWNyeXB0X2ZyYW1lXzE1NjQzNDE4NTZcInRpdGxlPVwiQWR2ZXJ0aXNlbWVudFwic2Nyb2xsaW5nPVwibm9cImZyYW1lYm9yZGVyPVwiMFwibWFyZ2lud2lkdGg9XCIwXCJtYXJnaW5oZWlnaHQ9XCIwXCJ3aWR0aD1cIjcyOFwiaGVpZ2h0PVwiOTBcIm9ubG9hZD1cIihmdW5jdGlvbigpe3RoaXMuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZShcXCdodHRwczpcL1wvZ29vZ2xlYWRzLmcuZG91YmxlY2xpY2submV0XC9wYWdlYWRcL2FkZmV0Y2g/Y2xpZW50PWNhLXB1Yi0yMzk5NDQxMjcxMjM5MTY5JnVybD1odHRwczpcL1wvZm9vdGJhbGwuZmFudGFzeXNwb3J0cy55YWhvby5jb21cLyZhZGs9NzM4MzI2MjY5JmFkc2FmZT1tZWRpdW0maXA9NjcuMTQ5LjcuMCZvdXRwdXQ9aHRtbCZ1bnZpZXdlZF9wb3NpdGlvbl9zdGFydD0xJmZvcm1hdD03Mjh4OTBfYXMmc3ViX2NsaWVudD1iaWRkZXItNDQ1NzU1MSZhY2VpZD1NQ1E4TkFIeVFqUUJSME0wQVpGRk5BR2NTVFFCT0UwMEFTeFBOQUdIVHpRQllGQTBBYjVRTkFIOFVEUUJnVkUwQVpoUk5BR2tVVFFCdzFFMEFjVlJOQUhZVVRRQjNsRTBBZVpSTkFIMVVUUUJEVkkwQVJkU05BRVlValFCSFZJMEFSNVNOQUVnVWpRQkoxSTBBU3RTTkFFelVqUUJQMUkwQVUxU05BRlFValFCVlZJMEFXRlNOQUZuVWpRQmNWSTBBWGhTTkFHQ1VqUUJoVkkwQVpGU05BR1hValFCR1hSVkFXamZ4UUVBWG1JQ2JmYUlBbmoyaUFMWDlvZ0M2dmFJQW1VX3FnSXFRcW9DMWtXcUFvVk5xZ0tNVXFvQ1ExbXFBamhlcWdKMFhxb0NlMS1xQW4xZ3FnTC1aS29DZEdXcUFubHBxZ0tGYTZvQ0huR3FBbW1qLXhJJmF3YmlkX2M9QUtBbWYtRG1JSjNSdzlFWVJTRjBrVkNZRndMekNzYUdRbDlkLUJ6UzZycDFZaVg4T1ZVRWl0RU5IYUtiODJPNUFLVldXTnczMGxvZXE3TmJfaVlXck5pS0ZpUTVSbTlvY0NvTFFlMUt6bzAzRHU3MjhJMlVyVHd3SDdpUU13WVR4bTY1dENNVm8zV1RvOWI3TmZSeGVrVjIyZ1hRUDVjWUVRelFJb0xwSEloM0JZTmphUWM1SWFjUVg1Z1NMSVBDU1pxV0lUOHpUWjFDNU9Xc25KMHVPajFxbnJrQVZOY1ZvbzloWFB2SXdOVTZvSDl3RmlQNndPSWVBNGVWaEVic0ZOallLLTJKblBUUGNCczBjQjNlQVBLSzNOZEtDcGFYWWZHUzlPbUhtWXQ1VXc1NkMyZG9UVFF3cDN5alYxQjVGVEhaSnN6dDlWUWJfWTZrcVBEZUJ5a1lvVHgxRG5BUWktdzRjOHhTNGtHTEhxTHNyUUZ5VnZyaUpWNEk3TGZfek9XRTUxbnV1Sms2eVdUam1IX1QwMU5rczJpTHZvTmRISWpNN1A0RWlaN0lSQ3BVNW85UU9xdWdFQVlvYmtzckdVQzRFMVVNV0tNZUNSYmFhYXRicWQwM0NRWGlMX3d2ZGd5NmszaTdOZFZaUmJadjBwVms2VUhjaG1iMlNpNWcwTmItSGY5NkFZWWM0UENwdm41bjRQU0l2NW95NVk5X3E3a3A2TnM3VUVqSTRyLXZucFhzcU1vbVRmN0o3OGlkMjY0WEZKLUFUNm9FYlRwTUpCRWR4OTFkS1V0MHBrZElLVU5JU21HTGdQTnhVOEdiT0tlSFJUVk5GbE5seS1xQng4UXZEMlcxS0tZWUpuOC1rU0hZTUZ3ZFBULVFhSDhhTGcmYXdiaWRfZD1BS0FtZi1ESEZoXzFLeEs2YVoyMFI3UEF3ckRxSHN0eFdjd04yOENTQmhEMmwzMHdTcVh3V1R3NExYaHJDaUxOeFc4aS1FRUFCNXp0WGZzQ1RkM3FURmU5RU9ROE5HUlBuN1dyWmM1d1k0c0RLRUFtX0xsTGlZMkl0LUpON2F4MVZFaVU5Tmo4cHJWRExUei14SUo4VlZ2QjdQWG05Uk9jMTlYQ3NQTUpBbnBsaVRqcFlQVDJ0NU1VZ1pQS0M1a00zTEFRYXNhaEw2Vmk3VHR4ZDhVVkpEUWNsTEhqSDlaRTdfeXhmMm5EbU9EQjQ2STZfTEV3TDRCWVFmeUctQ19xXzZiQ2lneHkyQ2VVbWxUU0hCTTJvNWZqeF9nV2txLWtuSE9qVmF2S1dydlFHY3g2bHRiSFZiNVdhWGtXTlBoZEp2MDFnaHdoOWRqV0p2WUt0bk1WOXRaa1ZSRm9STnlMQXpKNXZqT0tuQnRldVpyczFlbDZEOU9xSlRIRmVDZ3VvWUFtMjBXVXFkN0pBTW9QakF5T2xiUDJubVZuRUlzMDgwR3EwbUhYcVBrSEFWc0hMZlIzRG1XZThaWnJwRXotUE40cElrMjVpOUhnZWYtNHAxdi1BSXJSUlJ2azg3djdadGY1X3ZuWmExX0hGczBCT01DNXVIQU5TaWJaWDBqU25YdDVMNzlEUV9Sa3BwbmtsaE5ERnVGdG9yZlNfUGEwU3lGb2V2eGpKVjBnQ3hDM29tcTE5WWJOT2g4bmRsRDQ4RTR0dUk4QkNDSzhRUlpuQ2VlakRLSUJFNjg5Yk5OX05kS1ZGbDRUYzhUVmt1TnVUSGN0QnJmQzdwWjQtZVNoa29nRFZ2WEVrQVh1ZF9JTFJVdEcxZDdnTlN4Q3A2eHREdnBFd2NsNzlJekJtNXBjb1FaQXIzRHp6R0dXZ3ZCd3lpVlBOcFVyNmhXbFc4d2NuNXdabnBDLWhWSU5iZXFSOHJqZjA0dkdsTWJnV1VMZUVQSWpNUTBOdDJYT05iRndpelUxUEFxRzFvZUlMVzV3Vy1kV184bXFkeE9mVTlKdWJnTzVxTDdVQXF6SDV2dFRLWERlUHMxaDBHdHNGSVgyYnJnbzRqM0dzRlVhSFNRR0g0RC1xR0V3dUhCZTNLTGp5em40cFJ6VXNzRFRQRUtWYVNrc0V4aGJjUlVoa3NJM2JPM2NCSVBZTUstT204T2p4NnNmbkFjLWZDaDNxSnFodWgwbnNFdzBvUjV4S05ZWFBDcWRWeUJYWmUya2RPbXl3ZU1MaUtOejVRMjhHbjdobEIyRktqb2Nwb21aR2QwVUlENElKY29icFp6NDcxMEdZS3VVbkQ4UjRZcG1qdE5uNHlJQUlMMW1MRmhBUlFMV1RHQ2Zua0JsYlhhMUF2OFp5TEh5N0FSbXktbHpIQmFteFRYWWQwNXZQR2R2enBYNkNtMkhad0pqSW9VbE9VS1hjNmN6eENqYnRWZFoxSTUyUXV3TExFN21UN005N1VQRC1KTmZWcm5vbldyTFJkejlpeXRHeFFRSHREdW8mY2lkPUNBQVNCT1JvaG5RJmV4az0xNTY0MzQxODU2JnJmbD1cXCcrKHR5cGVvZih3aW5kb3cucmZsKT09XFwnZnVuY3Rpb25cXCc/cmZsKCk6XFwnXFwnKSxcXCdodHRwczpcL1wvZ29vZ2xlYWRzLmcuZG91YmxlY2xpY2submV0XFwnKX0pLmNhbGwodGhpcyk7XCJzcmM9XCJodHRwczpcL1wvZ29vZ2xlYWRzLmcuZG91YmxlY2xpY2submV0XC9wYWdlYWRcL3JlbmRlcl9wb3N0X2Fkc192MS5odG1sI2V4az0xNTY0MzQxODU2JmFfcHI9MjowLjA1MjA0OVwiPjxcL2lmcmFtZT48ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwcHg7IHRvcDogMHB4OyB2aXNpYmlsaXR5OiBoaWRkZW47XCI+PGknICsgJ21nIHNyYz1cImh0dHBzOlwvXC9wYWdlYWQyLmdvb2dsZXN5bmRpY2F0aW9uLmNvbVwvcGFnZWFkXC9nZW5fMjA0P2lkPWF3YmlkJmF3YmlkX2I9QUtBbWYtQ3A3c0ZSa2RNdG9vUnZWM1R2YWc3X3FrOGtyT0pQYUZOZGNZMU1UZm1uNzNvbmhuOHZtdE93YTk5djJQS2NiUzYzeU4zMlFNVXp6cElMMmR5NGd6YUVVV3drcUEmcHI9MjowLjA1MjA0OVwiIGJvcmRlcj0wIHdpZHRoPTEgaGVpZ2h0PTEgYWx0PVwiXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj48XC9kaXY+PHNjcicgKyAnaXB0IHNyYz1cImh0dHBzOlwvXC9nb29nbGVhZHMuZy5kb3VibGVjbGljay5uZXRcL3BhZ2VhZFwveGJmZV9iYWNrZmlsbC5qc1wiPjxcL3NjcicgKyAnaXB0PjxzY3InICsgJ2lwdD4oZnVuY3Rpb24oKSB7cjNweChcXCcxNTY0MzQxODU2XFwnKTt9KSgpOzxcL3NjcicgKyAnaXB0PjxzY3InICsgJ2lwdCB0eXBlPVwidGV4dFwvamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOlwvXC9hZHMueWFob28uY29tXC9nZXQtdXNlci1pZD92ZXI9MiZuPTIzMzUxJnRzPTE1OTU0NTYwMDgmc2lnPTUwZmE5OWQwNTI2MDUwNDUmZ2Rwcj0wJmdkcHJfY29uc2VudD1cIj48XC9zY3InICsgJ2lwdD48c2NyJyArICdpcHQgdHlwZT1cInRleHRcL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczpcL1wvc2VydmljZS5pZHN5bmMuYW5hbHl0aWNzLnlhaG9vLmNvbVwvc3BcL3YwXC9waXhlbHM/cGl4ZWxJZHM9NTgyMzgsNTU5NDAsNTU5NDUsNTgyOTcsNTgyOTQsNTgyOTQsNTU5NTMsNTU5MzYsNTU5MzYsNTgyOTImcmVmZXJyZXI9JmxpbWl0PTEyJnVzX3ByaXZhY3k9bnVsbCZqcz0xJl9vcmlnaW49MSZnZHByPTAmZXVjb25zZW50PVwiPjxcL3NjcicgKyAnaXB0PjwhLS0gQWRzIGJ5IFZlcml6b24gTWVkaWEgU1NQIC0gT3B0aW1pemVkIGJ5IE5FWEFHRSAtIFdlZG5lc2RheSwgSnVseSAyMiwgMjAyMCA2OjEzOjI4IFBNIEVEVCAtLT48XC9kaXY+JyArICdcXG4nO1xuYWRDb250ZW50ICs9ICc8c2NyJyArICdpcHQgc3JjPVwiaHR0cHM6XC9cL3MueWltZy5jb21cL2NiXC9hZlwvYWRmZWVkYmFjay0xLjAuOTIuanNcIj48XC9zY3InICsgJ2lwdD4nICsgJ1xcbic7XG5hZENvbnRlbnQgKz0gJzxzY3InICsgJ2lwdCB0eXBlPVwidGV4dFwvamF2YXNjcmlwdFwiPicgKyAnXFxuJztcbmFkQ29udGVudCArPSAnaWYgKHdpbmRvdy5PQVRIICYmIHdpbmRvdy5PQVRILkFkRmVlZGJhY2spIHsnICsgJ1xcbic7XG5hZENvbnRlbnQgKz0gJyAgICAgICAgICAgIHdpbmRvdy5PQVRILkFkRmVlZGJhY2suaW5pdCh7JyArICdcXG4nO1xuYWRDb250ZW50ICs9ICcgICAgICAgICAgICAgICAgbGFuZzpcImVuLVVTXCIsJyArICdcXG4nO1xuYWRDb250ZW50ICs9ICcgICAgICAgICAgICAgICAgYmVhY29uVXJsOlwiaHR0cHM6XC9cL2JlYXAtYmMueWFob28uY29tXC9hZlwvdXM/YnY9MS4wLjAmYnM9KDE5cjE3b25pMShnaWQkMGFiMDA3OGU2ZjYxNGRkNGJjNmE5ODI4NThmZWVlMjcsc3QkMTU5NTQ1NjAwODI4ODAwMCxsaSQ5Mzc0LGNyJDM5Mjg2NTI0ODM5NV5eMl5eNTExMCxkbW4kYW1lcmljYW5zdGFuZGFyZHdhbGtpbmJhdGhzLmNvbSxzcnYkNCxleHAkMTU5NTQ2MDgwODI4ODAwMCxjdCQyNix2JDEuMC4wLGFkdiQ1MTEwLHBiaWQkNTI0Njksc2VpZCQxMjExMjk1NTEsYWZ2JDIuMF5eMzEzNjRhNzhlYmYxMWQzMzExZGIwMDkwZDEzZGQ5ZTI3ZGIxMWRlYSxwZG1uJGh0dHBzOlwvXC9zcG9ydHMueWFob28uY29tXC8sc2kkMjE3NjM0LGFkc2l6ZSQ3Mjh4OTAsZHRpZCQxKSkmYWw9KCR7YWZwYXJhbXN9KSZyPTQxNzYyXCIsJyArICdcXG4nO1xuYWRDb250ZW50ICs9ICcgICAgICAgICAgICAgICAgdmlld0lkOlwiYS1kNzYwMlwiLCcgKyAnXFxuJztcbmFkQ29udGVudCArPSAnICAgICAgICAgICAgICAgIGRldmljZVR5cGVJZDoxLCcgKyAnXFxuJztcbmFkQ29udGVudCArPSAnICAgICAgICAgICAgICAgIGNvbmZpZ3M6IHsnICsgJ1xcbic7XG5hZENvbnRlbnQgKz0gJyAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVJZDogXCJkZWZhdWx0XCIsJyArICdcXG4nO1xuYWRDb250ZW50ICs9ICcgICAgICAgICAgICAgICAgICAgfSwnICsgJ1xcbic7XG5hZENvbnRlbnQgKz0gJyAgICAgICAgICAgIH0pOycgKyAnXFxuJztcbmFkQ29udGVudCArPSAnIH0nICsgJ1xcbic7XG5hZENvbnRlbnQgKz0gJzxcL3NjcicgKyAnaXB0PicgKyAnXFxuJztcbmRvY3VtZW50LndyaXRlKGFkQ29udGVudCk7PFwvc2NyaXB0PiIsImxvd0hUTUwiOiIiLCJtZXRhIjp7InkiOnsicG9zIjoiTERSQiIsImNzY0hUTUwiOiI8aW1nIHdpZHRoPTEgaGVpZ2h0PTEgYWx0PVwiXCIgc3JjPVwiaHR0cHM6XC9cL3VzLnkuYXR3b2xhLmNvbVwvYWRjb3VudHwyLjB8NTExMy4xfDQ4MzEzODN8MHwyMjV8QWRJZD0tNDE7Qm5JZD00O2N0PTIxMTg4OTg0NztzdD00MjczO2FkY2lkPTE7aXRpbWU9NDU2MDA3Nzg4O3JlcXR5cGU9NTs7aW1wcmVmPTE1OTU0NTYwMDg0Mzg5MTc2Mzk7aW1wcmVmc2VxPTc1MTU5NTQwMDQ3Mjg1MDQwO2ltcHJlZnRzPTE1OTU0NTYwMDg7YWRjbG50aWQ9MTAwNDtzcGFjZWlkPTc4MjIwMDk5OTthZHBvc2l0aW9uPUxEUkI7bG1zaWQ9O3B2aWQ9Z1lwWGJEY3lMak9tUnNCdDl1dmcyQUguTmpjdU1RQUFBQUFNb0phaTtzZWN0aW9uaWQ9MTIxMTI5NTUxO2t2c2VjdXJlJTJEZGFybGE9NCUyRDIlMkQxJTdDeXNkJTdDMjtrdm1uPXk0MDE3Mjg7a3Zzc3A9c3NwO2t2c2VjdXJlPXRydWU7a3ZwZ2NvbG89YmYxO2t2YWR0YyU1RmR2bWt0bmFtZT11bmtub3duO2t2YWR0YyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2YnJhbmQ9Z29vZ2xlO2t2YWR0YyU1RmR2dHlwZT1kZXNrdG9wO2t2YWR0YyU1RmR2bW9kZWw9Y2hyb21lJTVGJTJEJTVGd2luZG93cztrdnJlcG8lNUZkdm9zcGx0PXdpbmRvd3MlNUYxMDtrdmFkdGMlNUZkdm9zdmVyc2lvbj1OVCUyMDEwJTJFMDtrdmFkdGMlNUZjcm1jYz1VTktOT1dOO2t2YWR0YyU1RmNybW5jPVVOS05PV047Z2Rwcj0wO1wiPiIsImNzY1VSSSI6Imh0dHBzOlwvXC91cy55LmF0d29sYS5jb21cL2FkY291bnR8Mi4wfDUxMTMuMXw0ODMxMzgzfDB8MjI1fEFkSWQ9LTQxO0JuSWQ9NDtjdD0yMTE4ODk4NDc7c3Q9NDI3MzthZGNpZD0xO2l0aW1lPTQ1NjAwNzc4ODtyZXF0eXBlPTU7O2ltcHJlZj0xNTk1NDU2MDA4NDM4OTE3NjM5O2ltcHJlZnNlcT03NTE1OTU0MDA0NzI4NTA0MDtpbXByZWZ0cz0xNTk1NDU2MDA4O2FkY2xudGlkPTEwMDQ7c3BhY2VpZD03ODIyMDA5OTk7YWRwb3NpdGlvbj1MRFJCO2xtc2lkPTtwdmlkPWdZcFhiRGN5TGpPbVJzQnQ5dXZnMkFILk5qY3VNUUFBQUFBTW9KYWk7c2VjdGlvbmlkPTEyMTEyOTU1MTtrdnNlY3VyZSUyRGRhcmxhPTQlMkQyJTJEMSU3Q3lzZCU3QzI7a3Ztbj15NDAxNzI4O2t2c3NwPXNzcDtrdnNlY3VyZT10cnVlO2t2cGdjb2xvPWJmMTtrdmFkdGMlNUZkdm1rdG5hbWU9dW5rbm93bjtrdmFkdGMlNUZkdm9zcGx0PXdpbmRvd3MlNUYxMDtrdmFkdGMlNUZkdmJyYW5kPWdvb2dsZTtrdmFkdGMlNUZkdnR5cGU9ZGVza3RvcDtrdmFkdGMlNUZkdm1vZGVsPWNocm9tZSU1RiUyRCU1RndpbmRvd3M7a3ZyZXBvJTVGZHZvc3BsdD13aW5kb3dzJTVGMTA7a3ZhZHRjJTVGZHZvc3ZlcnNpb249TlQlMjAxMCUyRTA7a3ZhZHRjJTVGY3JtY2M9VU5LTk9XTjtrdmFkdGMlNUZjcm1uYz1VTktOT1dOO2dkcHI9MDsiLCJiZWhhdmlvciI6Im5vbl9leHAiLCJhZElEIjoiMTIzNDU2NyIsIm1hdGNoSUQiOiI5OTk5OTkuOTk5OTk5Ljk5OTk5OS45OTk5OTkiLCJib29rSUQiOiIxMDUxNTQ4NyIsInNsb3RJRCI6IjAiLCJzZXJ2ZVR5cGUiOiI3IiwidHRsIjotMSwiZXJyIjpmYWxzZSwiaGFzRXh0ZXJuYWwiOmZhbHNlLCJzdXBwX3VnYyI6IjAiLCJwbGFjZW1lbnRJRCI6IjEwNTE1NDg3IiwiZmRiIjpudWxsLCJzZXJ2ZVRpbWUiOi0xLCJpbXBJRCI6Ii0xIiwiY3JlYXRpdmVJRCI6MjY1MDc2OTcsImFkYyI6IntcImxhYmVsXCI6XCJBZENob2ljZXNcIixcInVybFwiOlwiaHR0cHM6XFxcL1xcXC9pbmZvLnlhaG9vLmNvbVxcXC9wcml2YWN5XFxcL3VzXFxcL3lhaG9vXFxcL3JlbGV2YW50YWRzLmh0bWxcIixcImNsb3NlXCI6XCJDbG9zZVwiLFwiY2xvc2VBZFwiOlwiQ2xvc2UgQWRcIixcInNob3dBZFwiOlwiU2hvdyBhZFwiLFwiY29sbGFwc2VcIjpcIkNvbGxhcHNlXCIsXCJmZGJcIjpcIkkgZG9uJ3QgbGlrZSB0aGlzIGFkXCIsXCJjb2RlXCI6XCJlbi11c1wifSIsImlzM3JkIjoxLCJmYWNTdGF0dXMiOnsiZmVkU3RhdHVzQ29kZSI6IjUiLCJmZWRTdGF0dXNNZXNzYWdlIjoicmVwbGFjZWQ6IEdEMiBjcG0gaXMgbG93ZXIgdGhhbiBZQVhcL1lBTVwvU0FQWSIsImV4Y2x1c2lvblN0YXR1cyI6eyJlZmZlY3RpdmVDb25maWd1cmF0aW9uIjp7ImhhbmRsZSI6Ijc4MjIwMDAwMV9VU1Nwb3J0c0ZhbnRhc3kiLCJpc0xlZ2FjeSI6dHJ1ZSwicnVsZXMiOlt7Imdyb3VwcyI6W1siTERSQiJdXSwicHJpb3JpdHlfdHlwZSI6ImVjcG0ifV0sInNwYWNlaWQiOiI3ODIyMDAwMDEifSwiZW5hYmxlZCI6dHJ1ZSwicG9zaXRpb25zIjp7IkxEUkIiOnsiZXhjbHVzaXZlIjpmYWxzZSwiZmFsbEJhY2siOmZhbHNlLCJub0FkIjpmYWxzZSwicGFzc2JhY2siOmZhbHNlLCJwcmlvcml0eSI6ZmFsc2V9fSwicmVwbGFjZWQiOiIiLCJ3aW5uZXJzIjpbeyJncm91cCI6MCwicG9zaXRpb25zIjoiTERSQiIsInJ1bGUiOjAsIndpblR5cGUiOiJlY3BtIn1dfX0sInVzZXJQcm92aWRlZERhdGEiOnt9LCJmYWNSb3RhdGlvbiI6e30sInNsb3REYXRhIjp7fSwic2l6ZSI6IjcyOHg5MCJ9fSwiY29uZiI6eyJ3Ijo3MjgsImgiOjkwfX0seyJpZCI6IkxEUkIyIiwiaHRtbCI6IjwhLS0gQWRQbGFjZW1lbnQgOiB5NDA4OTI2IC0tPjwhLS0gVmVyaXpvbiBNZWRpYSBTU1AgQmFubmVyQWQgRHNwSWQ6MCwgU2VhdElkOjMsIERzcENySWQ6cGFzc2JhY2stMTU3LCBDcnNDcklkOiAtLT48aW1nIHNyYz1cImh0dHBzOlwvXC91cy1lYXN0LTEub25lbW9iaWxlLnlhaG9vLmNvbVwvYWRtYXhcL2FkRXZlbnQuZG8/dGlkaT03NzA3NzEzMjcmYW1wO3NpdGVwaWQ9MjE3NjM0JmFtcDtwb3NpPTc4OTU5NSZhbXA7Z3JwPSUzRiUzRiUzRiZhbXA7bmw9MTU5NTQ1NjAwODUyMiZhbXA7cnRzPTE1OTU0NTYwMDgyODkmYW1wO3BpeD0xJmFtcDtldD0xJmFtcDthPWdZcFhiRGN5TGpPbVJzQnQ5dXZnMkFILk5qY3VNUUFBQUFBTW9KYWktMSZhbXA7bT1hWEF0TVRBdE1qSXRPUzB4TkEuLiZhbXA7Yj1NenRWVXlBdElFRmtXQ0JRWVhOelltRmphenNfUHo4N096czdZV0l4WVRJellXTm1abUU1TkdNNU1tSXdOakUzTWpRd09ETTBNelJpT0RBN0xURTdNVFU1TlRRMU16UXdNQS4uJmFtcDt4ZGk9UHo4X2ZEOF9QM3dfUHo5OE1BLi4mYW1wO3hvaT1NSHhWVTBFLiZhbXA7aGI9dHJ1ZSZhbXA7dHlwZT0wJmFtcDthZj03JmFtcDticnhkUHVibGlzaGVySWQ9MjA0NTk5MzMyMjMmYW1wO2JyeGRTaXRlSWQ9NDQ1NzU1MSZhbXA7YnJ4ZFNlY3Rpb25JZD0xMjExMjk1NTEmYW1wO2RldHk9NVwiIHN0eWxlPVwiZGlzcGxheTpub25lO3dpZHRoOjFweDtoZWlnaHQ6MXB4O2JvcmRlcjowO1wiIHdpZHRoPVwiMVwiIGhlaWdodD1cIjFcIiBhbHQ9XCJcIlwvPjxzY3JpcHQgYXN5bmMgc3JjPVwiXC9cL3BhZ2VhZDIuZ29vZ2xlc3luZGljYXRpb24uY29tXC9wYWdlYWRcL2pzXC9hZHNieWdvb2dsZS5qc1wiPjxcL3NjcmlwdD48aW5zIGNsYXNzPVwiYWRzYnlnb29nbGVcIiBzdHlsZT1cImRpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjcyOHB4O2hlaWdodDo5MHB4XCIgZGF0YS1hZC1jbGllbnQ9XCJjYS1wdWItNTc4NjI0MzAzMTYxMDE3MlwiIGRhdGEtYWQtc2xvdD1cInlzcG9ydHNcIiBkYXRhLWxhbmd1YWdlPVwiZW5cIiBkYXRhLXBhZ2UtdXJsPVwiaHR0cHM6XC9cL2Zvb3RiYWxsLmZhbnRhc3lzcG9ydHMueWFob28uY29tXC9cIiBkYXRhLXJlc3RyaWN0LWRhdGEtcHJvY2Vzc2luZz1cIjBcIj48XC9pbnM+PHNjcmlwdD4oYWRzYnlnb29nbGUgPSB3aW5kb3cuYWRzYnlnb29nbGUgfHwgW10pLnB1c2goe3BhcmFtczoge2dvb2dsZV9hbGxvd19leHBhbmRhYmxlX2FkczogZmFsc2V9fSk7PFwvc2NyaXB0PjxzY3JpcHQgdHlwZT1cInRleHRcL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczpcL1wvYWRzLnlhaG9vLmNvbVwvZ2V0LXVzZXItaWQ/dmVyPTImbj0yMzM1MSZ0cz0xNTk1NDU2MDA4JnNpZz01MGZhOTlkMDUyNjA1MDQ1JmdkcHI9MCZnZHByX2NvbnNlbnQ9XCI+PFwvc2NyaXB0PjxzY3JpcHQgdHlwZT1cInRleHRcL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczpcL1wvc2VydmljZS5pZHN5bmMuYW5hbHl0aWNzLnlhaG9vLmNvbVwvc3BcL3YwXC9waXhlbHM/cGl4ZWxJZHM9NTgyMzgsNTU5NDAsNTU5NDUsNTgyOTcsNTgyOTQsNTgyOTQsNTU5NTMsNTU5MzYsNTU5MzYsNTgyOTImcmVmZXJyZXI9JmxpbWl0PTEyJnVzX3ByaXZhY3k9bnVsbCZqcz0xJl9vcmlnaW49MSZnZHByPTAmZXVjb25zZW50PVwiPjxcL3NjcmlwdD48IS0tIEFkcyBieSBWZXJpem9uIE1lZGlhIFNTUCAtIE9wdGltaXplZCBieSBORVhBR0UgLSBXZWRuZXNkYXksIEp1bHkgMjIsIDIwMjAgNjoxMzoyOCBQTSBFRFQgLS0+IiwibG93SFRNTCI6IiIsIm1ldGEiOnsieSI6eyJwb3MiOiJMRFJCMiIsImNzY0hUTUwiOiI8aW1nIHdpZHRoPTEgaGVpZ2h0PTEgYWx0PVwiXCIgc3JjPVwiaHR0cHM6XC9cL3VzLnkuYXR3b2xhLmNvbVwvYWRjb3VudHwyLjB8NTExMy4xfDQ4ODI3NjZ8MHwyMjV8QWRJZD0tNDE7Qm5JZD00O2N0PTIxMTg4OTg0NztzdD01OTIxO2FkY2lkPTE7aXRpbWU9NDU2MDA3NzkyO3JlcXR5cGU9NTs7aW1wcmVmPTE1OTU0NTYwMDg0Mzg5MTc2NDc7aW1wcmVmc2VxPTc1MTU5NTQwMDQ3Mjg1MDQzO2ltcHJlZnRzPTE1OTU0NTYwMDg7YWRjbG50aWQ9MTAwNDtzcGFjZWlkPTc4MjIwMDk5OTthZHBvc2l0aW9uPUxEUkIyO2xtc2lkPTtwdmlkPWdZcFhiRGN5TGpPbVJzQnQ5dXZnMkFILk5qY3VNUUFBQUFBTW9KYWk7c2VjdGlvbmlkPTEyMTEyOTU1MTtrdnNlY3VyZSUyRGRhcmxhPTQlMkQyJTJEMSU3Q3lzZCU3QzI7a3Ztbj15NDA4OTI2O2t2c3NwPXNzcDtrdnNlY3VyZT10cnVlO2t2cGdjb2xvPWJmMTtrdmFkdGMlNUZkdm1rdG5hbWU9dW5rbm93bjtrdmFkdGMlNUZkdm9zcGx0PXdpbmRvd3MlNUYxMDtrdmFkdGMlNUZkdmJyYW5kPWdvb2dsZTtrdmFkdGMlNUZkdnR5cGU9ZGVza3RvcDtrdmFkdGMlNUZkdm1vZGVsPWNocm9tZSU1RiUyRCU1RndpbmRvd3M7a3ZyZXBvJTVGZHZvc3BsdD13aW5kb3dzJTVGMTA7a3ZhZHRjJTVGZHZvc3ZlcnNpb249TlQlMjAxMCUyRTA7a3ZhZHRjJTVGY3JtY2M9VU5LTk9XTjtrdmFkdGMlNUZjcm1uYz1VTktOT1dOO2dkcHI9MDtcIj4iLCJjc2NVUkkiOiJodHRwczpcL1wvdXMueS5hdHdvbGEuY29tXC9hZGNvdW50fDIuMHw1MTEzLjF8NDg4Mjc2NnwwfDIyNXxBZElkPS00MTtCbklkPTQ7Y3Q9MjExODg5ODQ3O3N0PTU5MjE7YWRjaWQ9MTtpdGltZT00NTYwMDc3OTI7cmVxdHlwZT01OztpbXByZWY9MTU5NTQ1NjAwODQzODkxNzY0NztpbXByZWZzZXE9NzUxNTk1NDAwNDcyODUwNDM7aW1wcmVmdHM9MTU5NTQ1NjAwODthZGNsbnRpZD0xMDA0O3NwYWNlaWQ9NzgyMjAwOTk5O2FkcG9zaXRpb249TERSQjI7bG1zaWQ9O3B2aWQ9Z1lwWGJEY3lMak9tUnNCdDl1dmcyQUguTmpjdU1RQUFBQUFNb0phaTtzZWN0aW9uaWQ9MTIxMTI5NTUxO2t2c2VjdXJlJTJEZGFybGE9NCUyRDIlMkQxJTdDeXNkJTdDMjtrdm1uPXk0MDg5MjY7a3Zzc3A9c3NwO2t2c2VjdXJlPXRydWU7a3ZwZ2NvbG89YmYxO2t2YWR0YyU1RmR2bWt0bmFtZT11bmtub3duO2t2YWR0YyU1RmR2b3NwbHQ9d2luZG93cyU1RjEwO2t2YWR0YyU1RmR2YnJhbmQ9Z29vZ2xlO2t2YWR0YyU1RmR2dHlwZT1kZXNrdG9wO2t2YWR0YyU1RmR2bW9kZWw9Y2hyb21lJTVGJTJEJTVGd2luZG93cztrdnJlcG8lNUZkdm9zcGx0PXdpbmRvd3MlNUYxMDtrdmFkdGMlNUZkdm9zdmVyc2lvbj1OVCUyMDEwJTJFMDtrdmFkdGMlNUZjcm1jYz1VTktOT1dOO2t2YWR0YyU1RmNybW5jPVVOS05PV047Z2Rwcj0wOyIsImJlaGF2aW9yIjoibm9uX2V4cCIsImFkSUQiOiIxMjM0NTY3IiwibWF0Y2hJRCI6Ijk5OTk5OS45OTk5OTkuOTk5OTk5Ljk5OTk5OSIsImJvb2tJRCI6IjEwNTE1NDg3Iiwic2xvdElEIjoiMCIsInNlcnZlVHlwZSI6IjciLCJ0dGwiOi0xLCJlcnIiOmZhbHNlLCJoYXNFeHRlcm5hbCI6ZmFsc2UsInN1cHBfdWdjIjoiMCIsInBsYWNlbWVudElEIjoiMTA1MTU0ODciLCJmZGIiOm51bGwsInNlcnZlVGltZSI6LTEsImltcElEIjoiLTEiLCJjcmVhdGl2ZUlEIjoyNjUwNzY5NywiYWRjIjoie1wibGFiZWxcIjpcIkFkQ2hvaWNlc1wiLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL2luZm8ueWFob28uY29tXFxcL3ByaXZhY3lcXFwvdXNcXFwveWFob29cXFwvcmVsZXZhbnRhZHMuaHRtbFwiLFwiY2xvc2VcIjpcIkNsb3NlXCIsXCJjbG9zZUFkXCI6XCJDbG9zZSBBZFwiLFwic2hvd0FkXCI6XCJTaG93IGFkXCIsXCJjb2xsYXBzZVwiOlwiQ29sbGFwc2VcIixcImZkYlwiOlwiSSBkb24ndCBsaWtlIHRoaXMgYWRcIixcImNvZGVcIjpcImVuLXVzXCJ9IiwiaXMzcmQiOjEsImZhY1N0YXR1cyI6eyJmZWRTdGF0dXNDb2RlIjoiNSIsImZlZFN0YXR1c01lc3NhZ2UiOiJyZXBsYWNlZDogR0QyIGNwbSBpcyBsb3dlciB0aGFuIFlBWFwvWUFNXC9TQVBZIiwiZXhjbHVzaW9uU3RhdHVzIjp7ImVmZmVjdGl2ZUNvbmZpZ3VyYXRpb24iOnsiaGFuZGxlIjoiNzgyMjAwMDAxX1VTU3BvcnRzRmFudGFzeSIsImlzTGVnYWN5Ijp0cnVlLCJydWxlcyI6W3siZ3JvdXBzIjpbWyJMRFJCIl1dLCJwcmlvcml0eV90eXBlIjoiZWNwbSJ9XSwic3BhY2VpZCI6Ijc4MjIwMDAwMSJ9LCJlbmFibGVkIjp0cnVlLCJwb3NpdGlvbnMiOnsiTERSQiI6eyJleGNsdXNpdmUiOmZhbHNlLCJmYWxsQmFjayI6ZmFsc2UsIm5vQWQiOmZhbHNlLCJwYXNzYmFjayI6ZmFsc2UsInByaW9yaXR5IjpmYWxzZX19LCJyZXBsYWNlZCI6IiIsIndpbm5lcnMiOlt7Imdyb3VwIjowLCJwb3NpdGlvbnMiOiJMRFJCIiwicnVsZSI6MCwid2luVHlwZSI6ImVjcG0ifV19fSwidXNlclByb3ZpZGVkRGF0YSI6e30sImZhY1JvdGF0aW9uIjp7fSwic2xvdERhdGEiOnt9LCJzaXplIjoiNzI4eDkwIn19LCJjb25mIjp7InciOjcyOCwiaCI6OTB9fV0sImNvbmYiOnsidXNlWUFDIjowLCJ1c2VQRSI6MSwic2VydmljZVBhdGgiOiIiLCJ4c2VydmljZVBhdGgiOiIiLCJiZWFjb25QYXRoIjoiIiwicmVuZGVyUGF0aCI6IiIsImFsbG93RmlGIjpmYWxzZSwic3JlbmRlclBhdGgiOiJodHRwczpcL1wvcy55aW1nLmNvbVwvcnFcL2RhcmxhXC80LTItMVwvaHRtbFwvci1zZi5odG1sIiwicmVuZGVyRmlsZSI6Imh0dHBzOlwvXC9zLnlpbWcuY29tXC9ycVwvZGFybGFcLzQtMi0xXC9odG1sXC9yLXNmLmh0bWwiLCJzZmJyZW5kZXJQYXRoIjoiaHR0cHM6XC9cL3MueWltZy5jb21cL3JxXC9kYXJsYVwvNC0yLTFcL2h0bWxcL3Itc2YuaHRtbCIsIm1zZ1BhdGgiOiJodHRwczpcL1wvZmMueWFob28uY29tXC91bnN1cHBvcnRlZC0xOTQ2Lmh0bWwiLCJjc2NQYXRoIjoiaHR0cHM6XC9cL3MueWltZy5jb21cL3JxXC9kYXJsYVwvNC0yLTFcL2h0bWxcL3ItY3NjLmh0bWwiLCJyb290Ijoic2RhcmxhIiwiZWRnZVJvb3QiOiJodHRwczpcL1wvcy55aW1nLmNvbVwvcnFcL2RhcmxhXC80LTItMSIsInNlZGdlUm9vdCI6Imh0dHBzOlwvXC9zLnlpbWcuY29tXC9ycVwvZGFybGFcLzQtMi0xIiwidmVyc2lvbiI6IjQtMi0xIiwidHBiVVJJIjoiIiwiaG9zdEZpbGUiOiJodHRwczpcL1wvcy55aW1nLmNvbVwvcnFcL2RhcmxhXC80LTItMVwvanNcL2ctci1taW4uanMiLCJmZGJfbG9jYWxlIjoiV2hhdCBkb24ndCB5b3UgbGlrZSBhYm91dCB0aGlzIGFkP3xJdCdzIG9mZmVuc2l2ZXxTb21ldGhpbmcgZWxzZXxUaGFuayB5b3UgZm9yIGhlbHBpbmcgdXMgaW1wcm92ZSB5b3VyIFlhaG9vIGV4cGVyaWVuY2V8SXQncyBub3QgcmVsZXZhbnR8SXQncyBkaXN0cmFjdGluZ3xJIGRvbid0IGxpa2UgdGhpcyBhZHxTZW5kfERvbmV8V2h5IGRvIEkgc2VlIGFkcz98TGVhcm4gbW9yZSBhYm91dCB5b3VyIGZlZWRiYWNrLnxXYW50IGFuIGFkLWZyZWUgaW5ib3g/IFVwZ3JhZGUgdG8gWWFob28gTWFpbCBQcm8hfFVwZ3JhZGUgTm93IiwicG9zaXRpb25zIjp7IkZTUlZZIjp7ImRlc3QiOiJ5c3BhZEZTUlZZRGVzdCIsImFzeiI6IjF4MSIsImlkIjoiRlNSVlkiLCJ3IjoiMSIsImgiOiIxIn0sIkxEUkIiOnsiZGVzdCI6InlzcGFkTERSQkRlc3QiLCJhc3oiOiI3Mjh4OTAiLCJpZCI6IkxEUkIiLCJ3IjoiNzI4IiwiaCI6IjkwIn0sIkxEUkIyIjp7ImRlc3QiOiJ5c3BhZExEUkIyRGVzdCIsImFzeiI6IjcyOHg5MCIsImlkIjoiTERSQjIiLCJ3IjoiNzI4IiwiaCI6IjkwIn19LCJwcm9wZXJ0eSI6IiIsImV2ZW50cyI6W10sImxhbmciOiJlbi11cyIsInNwYWNlSUQiOiI3ODIyMDA5OTkiLCJkZWJ1ZyI6ZmFsc2UsImFzU3RyaW5nIjoie1widXNlWUFDXCI6MCxcInVzZVBFXCI6MSxcInNlcnZpY2VQYXRoXCI6XCJcIixcInhzZXJ2aWNlUGF0aFwiOlwiXCIsXCJiZWFjb25QYXRoXCI6XCJcIixcInJlbmRlclBhdGhcIjpcIlwiLFwiYWxsb3dGaUZcIjpmYWxzZSxcInNyZW5kZXJQYXRoXCI6XCJodHRwczpcXFwvXFxcL3MueWltZy5jb21cXFwvcnFcXFwvZGFybGFcXFwvNC0yLTFcXFwvaHRtbFxcXC9yLXNmLmh0bWxcIixcInJlbmRlckZpbGVcIjpcImh0dHBzOlxcXC9cXFwvcy55aW1nLmNvbVxcXC9ycVxcXC9kYXJsYVxcXC80LTItMVxcXC9odG1sXFxcL3Itc2YuaHRtbFwiLFwic2ZicmVuZGVyUGF0aFwiOlwiaHR0cHM6XFxcL1xcXC9zLnlpbWcuY29tXFxcL3JxXFxcL2RhcmxhXFxcLzQtMi0xXFxcL2h0bWxcXFwvci1zZi5odG1sXCIsXCJtc2dQYXRoXCI6XCJodHRwczpcXFwvXFxcL2ZjLnlhaG9vLmNvbVxcXC91bnN1cHBvcnRlZC0xOTQ2Lmh0bWxcIixcImNzY1BhdGhcIjpcImh0dHBzOlxcXC9cXFwvcy55aW1nLmNvbVxcXC9ycVxcXC9kYXJsYVxcXC80LTItMVxcXC9odG1sXFxcL3ItY3NjLmh0bWxcIixcInJvb3RcIjpcInNkYXJsYVwiLFwiZWRnZVJvb3RcIjpcImh0dHBzOlxcXC9cXFwvcy55aW1nLmNvbVxcXC9ycVxcXC9kYXJsYVxcXC80LTItMVwiLFwic2VkZ2VSb290XCI6XCJodHRwczpcXFwvXFxcL3MueWltZy5jb21cXFwvcnFcXFwvZGFybGFcXFwvNC0yLTFcIixcInZlcnNpb25cIjpcIjQtMi0xXCIsXCJ0cGJVUklcIjpcIlwiLFwiaG9zdEZpbGVcIjpcImh0dHBzOlxcXC9cXFwvcy55aW1nLmNvbVxcXC9ycVxcXC9kYXJsYVxcXC80LTItMVxcXC9qc1xcXC9nLXItbWluLmpzXCIsXCJmZGJfbG9jYWxlXCI6XCJXaGF0IGRvbid0IHlvdSBsaWtlIGFib3V0IHRoaXMgYWQ/fEl0J3Mgb2ZmZW5zaXZlfFNvbWV0aGluZyBlbHNlfFRoYW5rIHlvdSBmb3IgaGVscGluZyB1cyBpbXByb3ZlIHlvdXIgWWFob28gZXhwZXJpZW5jZXxJdCdzIG5vdCByZWxldmFudHxJdCdzIGRpc3RyYWN0aW5nfEkgZG9uJ3QgbGlrZSB0aGlzIGFkfFNlbmR8RG9uZXxXaHkgZG8gSSBzZWUgYWRzP3xMZWFybiBtb3JlIGFib3V0IHlvdXIgZmVlZGJhY2sufFdhbnQgYW4gYWQtZnJlZSBpbmJveD8gVXBncmFkZSB0byBZYWhvbyBNYWlsIFBybyF8VXBncmFkZSBOb3dcIixcInBvc2l0aW9uc1wiOntcIkZTUlZZXCI6e1wiZGVzdFwiOlwieXNwYWRGU1JWWURlc3RcIixcImFzelwiOlwiMXgxXCIsXCJpZFwiOlwiRlNSVllcIixcIndcIjpcIjFcIixcImhcIjpcIjFcIn0sXCJMRFJCXCI6e1wiZGVzdFwiOlwieXNwYWRMRFJCRGVzdFwiLFwiYXN6XCI6XCI3Mjh4OTBcIixcImlkXCI6XCJMRFJCXCIsXCJ3XCI6XCI3MjhcIixcImhcIjpcIjkwXCJ9LFwiTERSQjJcIjp7XCJkZXN0XCI6XCJ5c3BhZExEUkIyRGVzdFwiLFwiYXN6XCI6XCI3Mjh4OTBcIixcImlkXCI6XCJMRFJCMlwiLFwid1wiOlwiNzI4XCIsXCJoXCI6XCI5MFwifX0sXCJwcm9wZXJ0eVwiOlwiXCIsXCJldmVudHNcIjpbXSxcImxhbmdcIjpcImVuLXVzXCIsXCJzcGFjZUlEXCI6XCI3ODIyMDA5OTlcIixcImRlYnVnXCI6ZmFsc2V9In0sIm1ldGEiOnsieSI6eyJwYWdlRW5kSFRNTCI6IjwhLS0gUGFnZSBFbmQgSFRNTCAtLT4iLCJwb3NfbGlzdCI6WyJGU1JWWSIsIkxEUkIiLCJMRFJCMiJdLCJ0cmFuc0lEIjoiZGFybGFfcHJlZmV0Y2hfMTU5NTQ1NjAwODI3NV8xNjcyMzU0MTExXzMiLCJrMl91cmkiOiIiLCJmYWNfcnQiOi0xLCJ0dGwiOi0xLCJzcGFjZUlEIjoiNzgyMjAwOTk5IiwibG9va3VwVGltZSI6MjYxLCJwcm9jVGltZSI6MjYzLCJucHYiOjAsInB2aWQiOiJnWXBYYkRjeUxqT21Sc0J0OXV2ZzJBSC5OamN1TVFBQUFBQU1vSmFpIiwic2VydmVUaW1lIjotMSwiZXAiOnsic2l0ZS1hdHRyaWJ1dGUiOiIiLCJ0Z3QiOiJfYmxhbmsiLCJzZWN1cmUiOnRydWUsInJlZiI6Imh0dHBzOlwvXC9mb290YmFsbC5mYW50YXN5c3BvcnRzLnlhaG9vLmNvbVwvIiwiZmlsdGVyIjoibm9fZXhwYW5kYWJsZTtleHBfaWZyYW1lX2V4cGFuZGFibGU7IiwiZGFybGFJRCI6ImRhcmxhX2luc3RhbmNlXzE1OTU0NTYwMDgyNzVfNTc0NTM5OTg1XzIifSwicHltIjp7Ii4iOiJ2MC4wLjk7Oy07In0sImhvc3QiOiIiLCJmaWx0ZXJlZCI6W10sInBlIjoiIn19fQ=="));

