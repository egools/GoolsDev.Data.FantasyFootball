YUI.add('media-playernote-tabs', function (Y) {
    Y.namespace('Sports.Plugin.PlayerNoteTabs');

    Y.Sports.Plugin.PlayerNoteTabs = Y.Base.create('YSPlayerNoteTabs', Y.Plugin.Base, [], {

        _handles: {},

        initializer: function () {
            var oPlug = this,
                oHost = oPlug.get('host');

            if (oHost.get('rendered')) {
                oPlug.renderUI();
                oPlug.bindUI();
            } else {
                oPlug._handles.afterHostRenderUI = oPlug.afterHostMethod('renderUI', function () {
                    oPlug.renderUI();
                    oPlug._handles.afterHostRenderUI.detach();
                    delete oPlug._handles.afterHostRenderUI;
                });
                oPlug._handles.afterHostBindUI = oPlug.afterHostMethod('bindUI', function () {
                    oPlug.bindUI();
                    oPlug._handles.afterHostBindUI.detach();
                    delete oPlug._handles.afterHostBindUI;
                });
            }
        },

        renderUI: function () {
            var oPlug = this,
                oHost = oPlug.get('host'),
                contentBox = oHost.get('contentBox'),
                tabViewNode = contentBox.one('.yui3-ysplayernote-tabview'),
                navNode = null;

            contentBox.addClass('tabbed');

            if (tabViewNode) {
                navNode = tabViewNode.one('.dynamicnote-tabs-hidden');
                if (navNode) {
                    navNode.removeClass('dynamicnote-tabs-hidden');
                }
            }
        },

        bindUI: function () {
            var oPlug = this,
                oHost = oPlug.get('host'),
                contentBox = oHost.get('contentBox');

            oPlug._handles.onTabClick = contentBox.delegate('click', Y.bind(oPlug._onTabClick, oPlug), '.dynamicnote-tabs li a');
            oPlug._handles.beforeCurrentViewChange = oHost.before('currentViewChange', Y.bind(oPlug._beforeCurrentViewChange, oPlug));
        },

        _onTabClick: function (e) {
            e.halt();

            var oPlug = this,
                oHost = oPlug.get('host'),
                targetNode = e.target,
                containerNode = e.container,
                view = targetNode.get('href').split('#')[1];

            if (!targetNode.ancestor('li').hasClass('selected')) {
                oHost.set('currentView', view);

                containerNode.one('li.selected').removeClass('selected');
                targetNode.ancestor('li').addClass('selected');

                Y.Fantasy.rapid.beaconClick('player-note-tabs', view);
            }
        },

        _beforeCurrentViewChange: function (e) {
            var oPlug = this,
                oHost = oPlug.get('host'),
                contentBox = oHost.get('contentBox'),
                viewNode = oHost._getViewNode(e.prevVal),
                bdNode = contentBox.one('.' + oHost.getClassName() + '-bdcontent');

            viewNode.setStyle('display', 'none');

            if (!contentBox.one('.loading-view')) {
                bdNode.append(oHost._getLoadingMessage(e.newVal));
            }
        }


    }, {
        ATTRS: {},
        NS: 'ysplayernotetabs'
    });
}, '', { 'requires': ['plugin', 'base-build', 'node-event-delegate', 'media-playernote-tabs-css'] });